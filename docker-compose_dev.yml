version: '3.8'

services:
  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
      - media_storage:/media
      - ./staticfiles:/staticfiles
    depends_on:
      - web

  db:
    image: postgres:latest
    env_file:
      - .env.dev
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7.2.1-alpine
    hostname: redis
    ports:
      - "127.0.0.1:6379:6379"

  celery_worker:
    build: .
    env_file:
      - .env.dev
    command: [ "bash", "./start-celery-worker.sh" ]
    volumes:
      - .:/code
      - media_storage:/media
    depends_on:
      - db
      - redis
      - rabbitmq

  celery_beat:
    build: .
    env_file:
      - .env.dev
    command: [ "bash", "./start-celery-beat.sh" ]
    volumes:
      - .:/code
      - media_storage:/media
    depends_on:
      - db
      - redis
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "127.0.0.1:5672:5672"
      - "127.0.0.1:15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  web:
    build: .
    env_file:
      - .env.dev
    command: [ "bash", "./start-django.sh" ]
    volumes:
      - .:/code
      - media_storage:/media
      - static_storage:/staticfiles
    ports:
      - "127.0.0.1:8000:8000"
    depends_on:
      - db
      - rabbitmq
      - redis
volumes:
  postgres_data:
  static_storage:
  media_storage:
  rabbitmq_data:
  caddy_data:
  caddy_config:
